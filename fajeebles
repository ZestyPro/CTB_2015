using UnityEngine;
using System.Collections;

public class fajeebles : MonoBehaviour {

	public float max_speed;
	public float eX = 0;
	public float jumps = 0;

	public Camera cam;

	private float speed = 0;
	private bool grounded = true;
	private int dir = 1;
	private Vector2 jumpForce = new Vector2(0,0);
	//private ray

	// Update is called once per frame
	void Update () {
		print (speed);


		//Ray2D ray = new Ray2D();
	}

	void OnCollisionStay2D()
	{
		grounded = true;
	}

	void OnCollisionExit2D()
	{
		grounded = false;
	}

	void OnEnable()
	{	
		event_manager.walk += move;
		event_manager.slowDown += slowDown;
		event_manager.jump += jmp;
	}

	void OnDisable()
	{
		StopAllCoroutines();

		event_manager.walk -= move;
		event_manager.slowDown -= slowDown;
		event_manager.jump -= jmp;
	}

	void move()
	{
		float tempS = (eX*eX*eX);
		speed = (tempS*tempS*Time.deltaTime);

		if(speed<0)
			{
			speed = 0;
			} else {
				if(speed<=max_speed)
				{	
				if(grounded) {
					eX += event_manager.inputInfo();
				} else {
					eX += .1f;
				}
			}
		}
		
		
		if(speed>max_speed)
			speed = max_speed;


			if(event_manager.inputInfo() >= 0)
			{
				dir = 1;
			} else if ( event_manager.inputInfo() <= 0) {
				dir = -1;
			}
	}

	void FixedUpdate()
	{
		StartCoroutine(moveVert());
		StartCoroutine(jumping());
	}

	void slowDown()
	{
		float tempS = (eX*eX*eX);
		speed = (tempS*tempS*Time.deltaTime);

		if(eX>0)
			eX--;

		if(eX < 0)
			eX = 0;

		if(speed<0)
			speed = 0;

	}

	void jmp()
	{
		if(grounded)
		{
			jumpForce = new Vector2(0,(float)jumps*Time.deltaTime);
		} 
	}

	IEnumerator jumping()
	{
		if(!jumpForce.Equals(new Vector2(0,0)))
			GetComponent<Rigidbody2D>().velocity = new Vector2(GetComponent<Rigidbody2D>().velocity.x, jumpForce.y);
			//GetComponent<Rigidbody2D>().AddForce(jumpForce,ForceMode2D.Force);

		jumpForce = new Vector2(0,0);

		yield return 0;
	}

	IEnumerator moveVert( )
	{
		Vector2 moveVect = new Vector2(dir*speed,GetComponent<Rigidbody2D>().velocity.y);
		GetComponent<Rigidbody2D>().velocity = moveVect;
		//transform.Translate(moveVect);
		yield return 0;
	}
}
